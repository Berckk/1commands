//////////////////////////////////////////////////////////////////////////
// Работа с командными файлами

#Использовать tempfiles

Перем мЗаписьТекста;
Перем мПуть;
Перем мКоманда;
Перем мТекстФайла;

Перем ЭтоWindows;
Перем Лог;

// Получить путь командного файла
//
// Возвращаемое значение:
//  Строка   - путь командного файла
//
Функция ПолучитьПуть() Экспорт
	Возврат мПуть;
КонецФункции

// Получить вывод выполненной команды.
//
//  Возвращаемое значение:
//   Строка - Вывод команды
//
Функция ПолучитьВывод() Экспорт
	ПроверитьЧтоКомандаВыполнена();
    Возврат мКоманда.ПолучитьВывод();
КонецФункции

// Получить код возврата выполненной команды.
//
//  Возвращаемое значение:
//   Число - код возврата команды
//
Функция ПолучитьКодВозврата() Экспорт
	ПроверитьЧтоКомандаВыполнена();
    Возврат мКоманда.ПолучитьКодВозврата();
КонецФункции

// Создать новый командный файл по переданному пути или создать новый временный файл
//
// Параметры:
//   Путь - Строка - путь создаваемого файла. Необязательное значение.
//		Если не задан, создается временный файл в каталоге временных файлов
//
//  Возвращаемое значение:
//   Строка - Путь созданного файла
//
Функция Создать(Знач Путь = "") Экспорт
	
	Если ПустаяСтрока(Путь) Тогда
		мПуть = ВременныеФайлы.НовоеИмяФайла(?(ЭтоWindows, ".bat", ".sh"));
		Лог.Отладка("КомандныйФайл: задаю временный путь командного файла <%1>.", мПуть);
	Иначе
		мПуть = Путь;
		Лог.Отладка("КомандныйФайл: использую путь командного файла <%1>.", мПуть);
	КонецЕсли;
	Кодировка = ?(ЭтоWindows, "cp866", КодировкаТекста.UTF8NoBOM);
	Если ЭтоWindows Тогда
		мЗаписьТекста = Новый ЗаписьТекста(мПуть, Кодировка);
	Иначе
		мЗаписьТекста = Новый ЗаписьТекста(мПуть, Кодировка, , , Символы.ПС);
	КонецЕсли;

	мТекстФайла = "";

	Возврат мПуть;
	
КонецФункции

// Добавить очередную команду в командный файл
//
// Параметры:
//  Команда  - Строка - очередная команда
//
Процедура ДобавитьКоманду(Знач Команда) Экспорт
	ПроверитьЧтоФайлОткрыт();
	мЗаписьТекста.ЗаписатьСтроку(Команда);
	мТекстФайла = мТекстФайла + Команда + Символы.ПС;	
КонецПроцедуры

// Выполнить командный файл и вернуть код возврата
//
//  Возвращаемое значение:
//   Число - код возврата
//
Функция Выполнить() Экспорт
	
	Закрыть();

	мКоманда = Новый Команда;
	мКоманда.УстановитьКодировкуВывода(КодировкаТекста.OEM);

	Если ЭтоWindows Тогда 
		Приложение = "cmd.exe";
		СтрокаЗапуска = "/C ""%1""";
	Иначе
		Приложение = "sh";
		СтрокаЗапуска = "'%1'";
	КонецЕсли;
	мКоманда.УстановитьКоманду(Приложение);	
	мКоманда.ДобавитьПараметр(СтрШаблон(СтрокаЗапуска, мПуть));	
	
	КодВозврата = мКоманда.Выполнить();
		
	Возврат КодВозврата;

КонецФункции

// Завершает запись командного файла
//
// Возвращаемое значение:
//   Строка  - путь командного файла
//
Функция Закрыть() Экспорт
	
	Если мЗаписьТекста <> Неопределено Тогда
		мЗаписьТекста.Закрыть();
		мЗаписьТекста = Неопределено;
	КонецЕсли;
	
	Возврат мПуть;
	
КонецФункции

// Получить текст командного файла
//
// Возвращаемое значение:
//   Строка  - текст командного файла
//
Функция ПолучитьТекстФайла() Экспорт
	Возврат мТекстФайла;
КонецФункции

//////////////////////////////////////////////////////////////////////////
// Служебные процедуры и функции

Процедура ПроверитьЧтоФайлОткрыт()
	Если мЗаписьТекста = Неопределено Тогда
		Создать();
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьЧтоКомандаВыполнена()
	Если Не ЗначениеЗаполнено(мКоманда) Тогда
		ВызватьИсключение СтрШаблон("Команда еще не выполнялась. <%1>", мПуть);
	КонецЕсли;
КонецПроцедуры

// Инициализация работы библиотеки.
// Задает минимальные настройки.
//
Процедура Инициализация()
    
    Лог = Логирование.ПолучитьЛог("oscript.lib.commands");
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ЭтоWindows = Найти(НРег(СистемнаяИнформация.ВерсияОС), "windows") > 0;

	мТекстФайла = "";
КонецПроцедуры

Инициализация();
